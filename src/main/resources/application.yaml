spring:
  redis:
    url: redis://@tx.warframe.top:9538
    client-type: jedis
    jedis:
      pool:
        max-active: 10


  datasource:
    url: jdbc:mysql://localhost:3306/bookdb?serverTimezone=UTC
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver

    druid:
      aop-patterns: edu.springboot.amdin.*  #监控SpringBean
      filters: stat,wall,slf4j     # 底层开启功能，stat（sql监控），wall（防火墙）

      stat-view-servlet: # 配置监控页功能
        enabled: true
        url-pattern: /druid/*
        login-username: yelingfa
        login-password: 123
        resetEnable: true

      web-stat-filter: # 监控web
        enabled: true
        urlPattern: /*
        exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'


      filter:
        stat: # 对上面filters里面的stat的详细配置
          slow-sql-millis: 1000
          logSlowSql: true
          enabled: true
        wall:
          enabled: true
          config:
            drop-table-allow: false
        slf4j:
          enabled: true
#mybatis:
#  mapper-locations: classpath:mapper/*.xml #配置mybatis映射文件的位置
#  configuration:
#    map-underscore-to-camel-case: true #开启_下划线转驼峰
mybatis-plus:
  mapper-locations: classpath:mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true

#将actuator监控端点默认都开启
#然后将web的端点设为所有
management:
  endpoints:
    enabled-by-default: true
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
#      自定义info信息，2.6以上版本无法读取配置中文件的信息，只能用配置类实现方法
#info:
#  appName: boot-admin
#  version: 2.0.1
#  mavenProjectName: @project.artifactId@  #使用@@可以获取maven的pom文件值
#  mavenProjectVersion: @project.version@